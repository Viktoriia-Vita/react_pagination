{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberPages","Math","ceil","isLastPage","isFirstPage","pagesArray","className","cn","disabled","href","onClick","event","preventDefault","map","page","active","handleClick","items","App","useState","setPage","setPerPage","maxPerPage","length","firstItem","currentItems","slice","defaultValue","id","onChange","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAaL,IAAgBE,EAC7BI,EAHY,IAGEN,EACdO,EAAahB,EAJD,EAIuBW,GAoBzC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAnBS,SAACC,GACXP,IACHO,EAAMC,iBACNb,EAAaD,EAAc,KAWzB,oBAWDO,EAAWQ,KAAI,SAAAC,GAAI,OAClB,oBACER,UAAWC,IAAG,YAAa,CACzBQ,OAAQjB,IAAgBgB,IAF5B,SAME,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMK,GACVJ,QAAS,SAACC,IAhDA,SAACA,EAAsCG,GACzDH,EAAMC,iBACNb,EAAae,GA+CHE,CAAYL,EAAOG,IALvB,SAQGA,KAVEA,MAeT,oBAAIR,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA1DS,SAACC,GACXR,IACHQ,EAAMC,iBACNb,EAAaD,EAAc,KAkDzB,wBC1EFmB,EAAQ5B,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KAEMC,EAAaR,EAAOjB,EAAUoB,EAAMM,OACtCN,EAAMM,OACLT,EAAOjB,EAEN2B,EAAYF,GACfA,GAAeR,EAAO,GAAKjB,GAExB4B,EAAeR,EAAMS,MAAMF,EAAWF,GAO5C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWQ,EADX,mBAC0BU,EAAY,EADtC,cAC6CF,EAD7C,eAC8DL,EAAMM,OADpE,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEqB,aAAc9B,EACd,UAAQ,kBACR+B,GAAG,kBACHtB,UAAU,eACVuB,SApBW,SAAClB,GACpBU,GAAYV,EAAMmB,OAAOC,OACzBX,EAAQ,IAaF,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAQqB,EAAMM,OACd1B,QAASA,EACTC,YAAagB,EACbf,aAAcqB,IAGfK,EAAaZ,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,UC7DhCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4882b75.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const firstPage = 1;\n  const numberPages = Math.ceil(total / perPage);\n  const isLastPage = currentPage === numberPages;\n  const isFirstPage = currentPage === firstPage;\n  const pagesArray = getNumbers(firstPage, numberPages);\n  const handleClick = (event: React.MouseEvent<HTMLElement>, page: number) => {\n    event.preventDefault();\n    onPageChange(page);\n  };\n\n  const nextPage = (event: React.MouseEvent<HTMLElement>) => {\n    if (!isLastPage) {\n      event.preventDefault();\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevPage = (event: React.MouseEvent<HTMLElement>) => {\n    if (!isFirstPage) {\n      event.preventDefault();\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesArray.map(page => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => {\n              handleClick(event, page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(3);\n\n  const maxPerPage = page * perPage > items.length\n    ? items.length\n    : (page * perPage);\n\n  const firstItem = maxPerPage\n  - (maxPerPage - ((page - 1) * perPage));\n\n  const currentItems = items.slice(firstItem, maxPerPage);\n\n  const handleSelect = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstItem + 1} - ${maxPerPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            defaultValue={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={(items.length)}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n\n      {currentItems.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}